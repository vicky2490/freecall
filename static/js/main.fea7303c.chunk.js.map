{"version":3,"sources":["App.js","components/Cards/Card.js","components/FinalMenus/FinalMenu.js","components/GameIndex/GameIndex.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","react_router_dom","to","Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dragStart","e","dataTransfer","setData","target","id","sourceContainerId","setSourceContainerId","getCardImgCssName","eachColor","number","cssName","state","card","cardRows","_this2","document","querySelectorAll","forEach","dragSource","addEventListener","name","num","draggable","isLastCard","source","key","p","rowIndex","concat","Boolean","Component","FinalMenu","onClick","newGame","exit","GameIndex","timeCount","pause","interval","setInterval","time","setState","cancelDefault","preventDefault","stopPropagation","dropped","console","log","rowData","targetElement","data","getData","split","arrayName","colorOfSourceCard","numOfSourceCard","_","clone","newTargetContainer","targetContainer","targetData","targetArrayName","targetBoxIndex","targetClassName","length","parentElement","isInVacancyBox","isInStandardBox","isInCard","colorOfTargetContainer","Number","isSameKindColor","numOfTarget","isOrderCard","isSameColor","lastTargetContainerObject","last","cardIndex","lastCard","content","isTargetCardLastCard","stepArrayName","move","targetArrayIndex","stepSourceArrayIndex","pop","push","previouslyStep","sourceArray","sourceIndex","targetArray","targetIndex","replayPreviouslyStep","lastPreviouslyStep","cardRowsClone","newTargetContainerClone","showTime","moment","startOf","add","format","onPause","clearInterval","startMenu","openMenu","row","j","i","swapA","Math","floor","random","swapB","temp","rowSwapA","rowSwapB","rowTemp","_loop","k","step","take","map","index","dataIdex","drop","dropTarget","_this3","data-role","components_Cards_Card","l","get","components_FinalMenus_FinalMenu","window","location","hostname","match","history","createHashHistory","ReactDOM","render","react_router","exact","path","component","Game","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fea7303c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"wrap\">\n      <div className=\"index-menu\">\n        <div className=\"index-menu-box\">\n          <Link to=\"/game\"><button className=\"start-button\">START</button></Link>\n          <div className=\"caption\">How to play?</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport './Card.css';\n\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      card: [],\n      cardRows: [],\n    }\n  }\n\n  componentDidMount() {\n    let dragSources = document.querySelectorAll('[draggable=\"true\"]')\n    dragSources.forEach(dragSource => {\n      dragSource.addEventListener('dragstart', this.dragStart)\n    })\n  }\n\n  dragStart = (e) => {\n    e.dataTransfer.setData('text/plain', e.target.id)\n    let sourceContainerId = e.target.id\n    if (this.props.setSourceContainerId) {\n      this.props.setSourceContainerId(sourceContainerId)\n    }\n  }\n\n  getCardImgCssName = (eachColor, number) => {\n    let cssName = '';\n    switch (eachColor) {\n      case 0:\n        cssName += 'spade-'\n        break;\n      case 1:\n        cssName += 'heart-'\n        break;\n      case 2:\n        cssName += 'club-'\n        break;\n      case 3:\n        cssName += 'diamond-'\n        break;\n      default:\n        break;\n    }\n    cssName += number;\n    return cssName;\n  }\n\n  render() {\n    let cardRows = this.props.cardRows;\n    let name = this.getCardImgCssName(cardRows.eachColor, cardRows.num);\n    let draggable =  this.props.isLastCard;\n    let source =  this.props.source;\n    let key = source==='drag' ? this.props.p : 'auto';\n    let rowIndex = this.props.rowIndex;\n\n    return (\n      <div className={`card ${name} top-${key}`}  draggable={Boolean(draggable)}  id={`${source}-${cardRows.eachColor}-${cardRows.num}-${rowIndex}`}>\n      </div>\n    )\n  }\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nimport './FinalMenu.css';\nimport { Link } from 'react-router-dom';\n\n\nclass FinalMenu extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    return (\n      <div className=\"bg\">\n \n        <div className=\"menu\">\n          <div className=\"card-spade\"></div>\n          <div className=\"card-heart\"></div>\n          <div className=\"card-club\"></div>\n          <button onClick={()=>this.props.newGame()}>NEW GAME</button>\n          <Link to=\"/\"><button>HOME</button></Link>\n          <button onClick={()=>this.props.exit()}>EXIT</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default FinalMenu;\n","import React, { Component } from 'react';\nimport './GameIndex.css';\nimport _ from 'lodash';\nimport Card from '../Cards/Card';\nimport FinalMenu from '../FinalMenus/FinalMenu';\nimport moment from 'moment';\n\nclass GameIndex extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      card: [],\n      cardRows: [],\n      sourceContainerId: '',\n      targetContainer: [[],[],[],[],[],[],[],[]],\n      previouslyStep: [],\n      move: '00',\n      time: 0,\n      pause: false,\n      openMenu: false,\n    }\n  }\n\n  componentDidMount() {\n    let dropTargets = document.querySelectorAll('[data-role=\"drag-drop-container\"]')\n    dropTargets.forEach(dropTarget => {\n      dropTarget.addEventListener('drop', this.dropped)\n      dropTarget.addEventListener('dragenter', this.cancelDefault)\n      dropTarget.addEventListener('dragover', this.cancelDefault)\n    })\n    this.timeCount();\n   }\n\n  timeCount = () => {\n    if (!this.state.pause) {\n      this.interval = setInterval(() => {\n        let time = this.state.time + 1;\n        this.setState({\n          time,\n        });\n      }, 1000);\n    }\n  }\n\n  cancelDefault = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    return false\n  }\n\n  dropped = (e) => {\n    console.log('dropped')\n    // get source\n    let data = e.dataTransfer.getData('text/plain').split('-');\n    let arrayName = data[0];\n    let colorOfSourceCard = data[1];\n    let numOfSourceCard = data[2];\n    let rowIndex = data[3];\n    let rowData;\n    let cardRows = _.clone(this.state.cardRows);\n    let newTargetContainer = _.clone(this.state.targetContainer);\n    // get target\n    let targetData = e.target.id.split('-');\n    let targetArrayName = targetData[0];\n    let targetBoxIndex = targetData[3];\n    let targetElement;\n\n    // get vacancyBox or standardBox or card\n    if (e.target.className.split(' ')[0] === 'card' && targetArrayName === 'drag') {\n      targetElement = e.target;\n    } else {\n      targetElement = newTargetContainer[`${targetBoxIndex}`].length >= 1 ? e.target.parentElement : e.target;\n    }\n    \n    let targetClassName = targetElement.className.split(' ')[0];\n    let isInVacancyBox = targetClassName === 'vacancy-box';\n    let isInStandardBox = targetClassName === 'standard-box';\n    let isInCard = targetClassName === 'card';\n\n    // 花色比對\n    let colorOfTargetContainer = targetElement.className.split(' ')[1];\n    if (isInCard) {\n      colorOfTargetContainer = Number(e.target.id.split('-')[1]);\n    }\n    // 同種花色 for 右上角四個 standard-box\n    let isSameKindColor = false;\n    switch (colorOfTargetContainer) {\n      case 'suithearts':\n        isSameKindColor = Number(colorOfSourceCard) === 1;\n        break;\n      case 'suitdiamonds':\n        isSameKindColor = Number(colorOfSourceCard) === 3;\n        break;\n      case 'suitclubs':\n        isSameKindColor = Number(colorOfSourceCard) === 2;\n        break;\n      case 'suitspades':\n        isSameKindColor = Number(colorOfSourceCard) === 0;\n        break;\n    \n      default:\n        break;\n    }\n\n    // 同顏色花色 for cards\n    let isSameColor = false;\n    switch (Number(colorOfTargetContainer)) {\n      case 1 :\n          isSameColor = Number(colorOfSourceCard) === 1 || Number(colorOfSourceCard) === 3;\n        break;\n      case 3 :\n          isSameColor = Number(colorOfSourceCard) === 1 || Number(colorOfSourceCard) === 3;\n        break;\n      case 0 :\n          isSameColor = Number(colorOfSourceCard) === 0 || Number(colorOfSourceCard) === 2;\n        break;\n      case 2 :\n          isSameColor = Number(colorOfSourceCard) === 0 || Number(colorOfSourceCard) === 2;\n        break;\n      default:\n        break;\n    }\n\n    // 比較數字: cards排放由大到小\n    let numOfTarget;\n    let isOrderCard;\n    if (isInCard) {\n      numOfTarget = e.target.id.split('-')[2];\n      isOrderCard = Number(numOfTarget) === Number(numOfSourceCard)+1;\n    } else { // standard-box排放由小到大\n      let lastTargetContainerObject = _.last(newTargetContainer[`${targetBoxIndex}`]);\n      numOfTarget = lastTargetContainerObject ? lastTargetContainerObject.num : 0;\n      isOrderCard = Number(numOfTarget) === Number(numOfSourceCard)-1;    \n    }\n\n    // move to card: 比對target card 是否為最後一張牌\n    let cardIndex = e.target.id.split('-')[3];\n    let lastCard = _.last(cardRows[`${cardIndex}`].content);\n    let isTargetCardLastCard = Number(lastCard.eachColor) === Number(colorOfTargetContainer) && Number(lastCard.num) === Number(numOfTarget);\n\n    // 可放置規則:\n    // isInVacancyBox: 只能一張\n    // isInStandardBox: 需要同種花色且由小到大\n    // isInCard: 需要同顏色花色且由大到小, 只能放置最後一張\n    if (isInVacancyBox && newTargetContainer[`${targetBoxIndex}`].length >= 1) {\n      this.cancelDefault(e)\n    } else if (isInStandardBox && !isSameKindColor){\n      this.cancelDefault(e)\n    } else if (isInStandardBox && isSameKindColor && !isOrderCard){\n      this.cancelDefault(e)\n    } else if (isInCard && !isTargetCardLastCard){\n      this.cancelDefault(e)\n    } else if (isInCard && isSameColor){\n      this.cancelDefault(e)\n    } else if (isInCard && !isSameColor && !isOrderCard){\n      this.cancelDefault(e)\n    } else {\n      let move = Number(this.state.move);\n      move += 1;\n      let stepArrayName;\n      let stepSourceArrayIndex = rowIndex;\n      let targetArrayName;\n      let targetArrayIndex;\n      if (arrayName === 'drag') {\n        rowData = cardRows[`${rowIndex}`].content.pop();\n        stepArrayName = 'cardRows';\n      } else if (arrayName === 'dropped') {\n        rowData = newTargetContainer[`${rowIndex}`].pop();\n        stepArrayName = 'newTargetContainer';\n      }\n\n      if (isInCard) {\n        cardRows[`${cardIndex}`].content.push(rowData);\n        targetArrayName = 'cardRows';\n        targetArrayIndex = cardIndex;\n      } else {\n        newTargetContainer[`${targetBoxIndex}`] = newTargetContainer[`${targetBoxIndex}`].concat([rowData]);\n        targetArrayName = 'newTargetContainer';      \n        targetArrayIndex = targetBoxIndex;\n      }\n\n      let previouslyStep = _.clone(this.state.previouslyStep);\n      previouslyStep.push({\n        sourceArray: stepArrayName,\n        sourceIndex: stepSourceArrayIndex,\n        targetArray: targetArrayName,\n        targetIndex: targetArrayIndex,\n        rowData,\n      });\n          \n      this.cancelDefault(e)\n      this.setState({\n        cardRows, \n        targetContainer: newTargetContainer,\n        move,\n        previouslyStep,\n      })\n    }\n  }\n\n  replayPreviouslyStep = () => {\n    let previouslyStep = _.clone(this.state.previouslyStep);\n    if (!previouslyStep.length) return;\n\n    let lastPreviouslyStep = _.last(previouslyStep);\n\n    let sourceArray = lastPreviouslyStep.sourceArray;\n    let sourceIndex = Number(lastPreviouslyStep.sourceIndex);\n    let targetArray = lastPreviouslyStep.targetArray;\n    let targetIndex = Number(lastPreviouslyStep.targetIndex);\n    let rowData = lastPreviouslyStep.rowData;\n\n    let cardRowsClone = _.clone(this.state.cardRows);\n    let newTargetContainerClone = _.clone(this.state.targetContainer);\n\n    // back pop to target\n    if (targetArray === 'cardRows') {     \n      cardRowsClone[`${targetIndex}`].content.pop();\n    } else {\n      newTargetContainerClone[`${targetIndex}`].pop();\n    }\n\n    // back push to source\n    if (sourceArray === 'cardRows') {\n      cardRowsClone[`${sourceIndex}`].content.push(rowData);\n    } else {\n      newTargetContainerClone[`${sourceIndex}`] = newTargetContainerClone[`${sourceIndex}`].concat([rowData]);\n    }\n    previouslyStep.pop();\n    // move count --\n    let move = Number(this.state.move);\n    move -= 1;\n\n    this.setState({\n      cardRows: cardRowsClone, \n      targetContainer: newTargetContainerClone,\n      previouslyStep,\n      move,\n    });\n  }\n\n  // 畫面出來前 給予card預設值(洗牌,每排幾張)以及發牌\n  componentWillMount () {\n    this.newGame();\n  }\n\n  setSourceContainerId = (sourceContainerId) => {\n    this.setState({\n      sourceContainerId, \n    })\n  }\n  \n  showTime = () => {\n    const timer = moment()\n      .startOf('day')\n      .add(this.state.time, 'second');\n    return timer.format('mm:ss');\n  }\n\n  onPause = () => {\n    let pause = !Boolean(this.state.pause);\n    this.setState({pause}, ()=>{\n      console.log('this.state.pause', this.state.pause);\n      if(this.state.pause) {\n        this.interval && clearInterval(this.interval);\n      } else {\n        this.timeCount();\n      }\n    })\n  }\n\n  startMenu = () => {\n    this.setState({\n      openMenu: true, \n    })\n  }\n\n  exit = () => {\n    this.setState({\n      openMenu: false, \n    })\n  }\n\n  newGame = () => {\n    this.setState({\n      card: [],\n      cardRows: [],\n      sourceContainerId: '',\n      targetContainer: [[],[],[],[],[],[],[],[]],\n      previouslyStep: [],\n      move: '00',\n      time: 0,\n      pause: false,\n      openMenu: false,\n    });\n    let card = [];\n    let row = [7,7,7,7,6,6,6,6];\n    let cardRows = [];\n    for (let j=0; j<52; j++) {\n      card.push(j);\n    }\n    for (let i=0; i<50; i++) {\n      let swapA = Math.floor(Math.random()*(52))+1;\n      let swapB = Math.floor(Math.random()*(52))+1;\n      let temp = card[swapA-1];\n      card[swapA-1] = card[swapB-1];\n      card[swapB-1] = temp;\n      // 位置幾張\n      let rowSwapA = Math.floor(Math.random()*(8))+1;\n      let rowSwapB = Math.floor(Math.random()*(8))+1;\n      let rowTemp = row[rowSwapA-1];\n      row[rowSwapA-1] = row[rowSwapB-1];\n      row[rowSwapB-1] = rowTemp;\n    }\n\n    // 發牌\n    for (let k=0; k<8; k++) {\n      let step = row[k];\n      let content = _.take(card, step);\n      content = _.map(content, function(data, index){\n        return {\n          eachColor: Math.floor(data/13),\n          num: (data + 1) % 13 === 0 ? 13 : (data + 1) % 13, \n          dataIdex: data,\n          rowIndex: k,\n        }\n      });  \n\n      cardRows.push({\n        row: k+1,\n        content,\n      });\n      card = _.drop(card, step);\n    }\n\n    this.setState({\n      card, \n      cardRows, \n    })\n  }\n\n  render() {\n    return (\n      <div className=\"game-wrap\">\n        <div className=\"header\">\n          <div className=\"title\">FREECELL</div>\n          <div className=\"count-bar\">\n            <div className=\"count-time-move\">TIME:</div>\n            <div className=\"count-time-move count-num\">{this.showTime()}</div>\n            <div className=\"count-time-move\">MOVE:</div>\n            <div className=\"count-time-move count-num\">{this.state.move}</div>\n          </div>\n        </div>\n        <div className={this.state.openMenu ? \"content blurry\" : \"content\"}>\n          <div className=\"vacancy-box\" id=\"dropped-target-container-0\" data-role=\"drag-drop-container\">\n          {\n            this.state.targetContainer[0].map((data, i) => <Card key={i} cardRows={data} p={i} rowIndex={0} source={'dropped'} isLastCard={this.state.targetContainer[0].length === (i+1)} setSourceContainerId={(l) => this.setSourceContainerId(l)}/>)\n          }       \n          </div>\n          <div className=\"vacancy-box\" id=\"dropped-target-container-1\" data-role=\"drag-drop-container\">\n          {\n            this.state.targetContainer[1].map((data, i) => <Card key={i} cardRows={data} p={i} rowIndex={1} source={'dropped'} isLastCard={this.state.targetContainer[1].length === (i+1)} setSourceContainerId={(l) => this.setSourceContainerId(l)}/>)\n          } \n          </div>\n          <div className=\"vacancy-box\" id=\"dropped-target-container-2\" data-role=\"drag-drop-container\">\n          {\n            this.state.targetContainer[2].map((data, i) => <Card key={i} cardRows={data} p={i} rowIndex={2} source={'dropped'} isLastCard={this.state.targetContainer[2].length === (i+1)} setSourceContainerId={(l) => this.setSourceContainerId(l)}/>)\n          } \n          </div>\n          <div className=\"vacancy-box\" id=\"dropped-target-container-3\" data-role=\"drag-drop-container\">\n          {\n            this.state.targetContainer[3].map((data, i) => <Card key={i} cardRows={data} p={i} rowIndex={3} source={'dropped'} isLastCard={this.state.targetContainer[3].length === (i+1)} setSourceContainerId={(l) => this.setSourceContainerId(l)}/>)\n          } \n          </div>\n          <div className=\"standard-box suithearts\" id=\"dropped-target-container-4\" data-role=\"drag-drop-container\">\n          {\n            this.state.targetContainer[4].map((data, i) => <Card key={i} cardRows={data} p={i} rowIndex={4} source={'dropped'} isLastCard={this.state.targetContainer[4].length === (i+1)} setSourceContainerId={(l) => this.setSourceContainerId(l)}/>)\n          } \n          </div>\n          <div className=\"standard-box suitdiamonds\" id=\"dropped-target-container-5\" data-role=\"drag-drop-container\">\n          {\n            this.state.targetContainer[5].map((data, i) => <Card key={i} cardRows={data} p={i} rowIndex={5} source={'dropped'} isLastCard={this.state.targetContainer[5].length === (i+1)} setSourceContainerId={(l) => this.setSourceContainerId(l)}/>)\n          } \n          </div>\n          <div className=\"standard-box suitclubs\" id=\"dropped-target-container-6\" data-role=\"drag-drop-container\">\n          {\n            this.state.targetContainer[6].map((data, i) => <Card key={i} cardRows={data} p={i} rowIndex={6} source={'dropped'} isLastCard={this.state.targetContainer[6].length === (i+1)} setSourceContainerId={(l) => this.setSourceContainerId(l)}/>)\n          } \n          </div>\n          <div className=\"standard-box suitspades\" id=\"dropped-target-container-7\" data-role=\"drag-drop-container\">\n          {\n            this.state.targetContainer[7].map((data, i) => <Card key={i} cardRows={data} p={i} rowIndex={7} source={'dropped'} isLastCard={this.state.targetContainer[7].length === (i+1)} setSourceContainerId={(l) => this.setSourceContainerId(l)}/>)\n          } \n          </div>\n\n          <div className=\"card-row\" data-role=\"drag-drop-container\">\n          {\n            _.get(this.state.cardRows[0], 'content', []).map((data, i) => <Card key={i} cardRows={data} p={i} rowIndex={0} source={'drag'} isLastCard={this.state.cardRows[0].content.length === (i+1)} setSourceContainerId={(l) => this.setSourceContainerId(l)}/>)\n          }\n          </div>\n          <div className=\"card-row\" data-role=\"drag-drop-container\">\n          {\n            _.get(this.state.cardRows[1], 'content', []).map((data, i) => <Card key={i} cardRows={data} p={i} rowIndex={1} source={'drag'} isLastCard={this.state.cardRows[1].content.length === (i+1)} setSourceContainerId={(l) => this.setSourceContainerId(l)}/>)\n          }\n          </div>\n          <div className=\"card-row\" data-role=\"drag-drop-container\">\n          {\n            _.get(this.state.cardRows[2], 'content', []).map((data, i) => <Card key={i} cardRows={data} p={i} rowIndex={2} source={'drag'} isLastCard={this.state.cardRows[2].content.length === (i+1)} setSourceContainerId={(l) => this.setSourceContainerId(l)}/>)\n          }\n          </div>\n          <div className=\"card-row\" data-role=\"drag-drop-container\">\n          {\n            _.get(this.state.cardRows[3], 'content', []).map((data, i) => <Card key={i} cardRows={data} p={i} rowIndex={3} source={'drag'} isLastCard={this.state.cardRows[3].content.length === (i+1)} setSourceContainerId={(l) => this.setSourceContainerId(l)}/>)\n          }\n          </div>\n          <div className=\"card-row\" data-role=\"drag-drop-container\">\n          {\n            _.get(this.state.cardRows[4], 'content', []).map((data, i) => <Card key={i} cardRows={data} p={i} rowIndex={4} source={'drag'} isLastCard={this.state.cardRows[4].content.length === (i+1)} setSourceContainerId={(l) => this.setSourceContainerId(l)}/>)\n          }\n          </div>\n          <div className=\"card-row\" data-role=\"drag-drop-container\">\n          {\n            _.get(this.state.cardRows[5], 'content', []).map((data, i) => <Card key={i} cardRows={data} p={i} rowIndex={5} source={'drag'} isLastCard={this.state.cardRows[5].content.length === (i+1)} setSourceContainerId={(l) => this.setSourceContainerId(l)}/>)\n          }\n          </div>\n          <div className=\"card-row\" data-role=\"drag-drop-container\">\n          {\n            _.get(this.state.cardRows[6], 'content', []).map((data, i) => <Card key={i} cardRows={data} p={i} rowIndex={6} source={'drag'} isLastCard={this.state.cardRows[6].content.length === (i+1)} setSourceContainerId={(l) => this.setSourceContainerId(l)}/>)\n          }\n          </div>\n          <div className=\"card-row\" data-role=\"drag-drop-container\">\n          {\n            _.get(this.state.cardRows[7], 'content', []).map((data, i) => <Card key={i} cardRows={data} p={i} rowIndex={7} source={'drag'} isLastCard={this.state.cardRows[7].content.length === (i+1)} setSourceContainerId={(l) => this.setSourceContainerId(l)}/>)\n          }\n          </div>\n          <div className=\"game-menu\">\n            <div className={this.state.openMenu ? \"material-icons setting work-Setting\" : \"material-icons setting\"} onClick={()=>this.startMenu()}>power_settings_new</div>\n            <div className={this.state.pause ? \"material-icons setting work-Setting\" : \"material-icons setting\"} onClick={()=>this.onPause()}>pause</div>\n            <div className=\"menu-btn-box\">\n              <button className=\"menu-btn replay\" onClick={()=>this.replayPreviouslyStep()}>UNDO</button>\n              <div className=\"card-spade\"></div>\n              <div className=\"card-heart\"></div>\n              <div className=\"card-club\"></div>\n            </div>\n            <div className=\"material-icons setting replay\" onClick={()=>this.replayPreviouslyStep()}>replay</div>\n            <div className=\"material-icons setting\">help_outline</div>\n          </div>                \n        </div>\n        { this.state.openMenu && <FinalMenu exit={()=>this.exit()} newGame={()=>this.newGame()}/>}\n      </div>\n    )\n  }\n\n}\n\nexport default GameIndex;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/cssReset.css';\nimport { Switch, Router, Route } from 'react-router';\nimport { createHashHistory } from 'history';\nimport App from './App';\nimport Game from './components/GameIndex/GameIndex';\nimport * as serviceWorker from './serviceWorker';\n\nconst history = createHashHistory();\n\nReactDOM.render((\n  <Router history={history}>\n    <Switch>\n      <Route exact path=\"/\" component={App}/>\n      <Route path=\"/game\" component={Game}/>\n    </Switch>\n  </Router>\n  ), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}